import type { NextPage, NextPageContext } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../../styles/Home.module.css";
import { IPageProps } from "../interfaces/IPageProps";
import ListWidget from "../widgets/ListWidget";
import clientPromise from "../../lib/mongodb";
import IAppConfig from "../interfaces/IAppConfig";
import { useContext } from "react";
import { BrandContext } from "../contexts/BrandContext";

const Home: NextPage<IPageProps> = () => {
  const { domain } = useContext(BrandContext);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>{domain}</div>
        <ListWidget />
      </main>
    </div>
  );
};

export async function getServerSideProps(
  ctx: NextPageContext
): Promise<{ props: IPageProps }> {
  const regexExp = /\.(.+)/;

  let host = ctx?.req?.headers?.host as string;

  const match = host.match(regexExp);
  const domain = match && match[1] ? (match[1] as string) : "unbranded";

  const client = await clientPromise;
  const db = client.db("app_config");
  const brand = await db.collection<IAppConfig>("brands").findOne({ domain });

  return {
    props: {
      variant: brand?.variant as number,
      host: ctx?.req?.headers.host as string,
      domain,
      title: brand?.title as string,
    },
  };
}

export default Home;
